Data

Address     Content     Description
0x420044    0x00000044  Grade is initialized to 'D'

BSS

Address     Description
0x420058    'I'
0x420059    's'
0x42005A    'h'
0x42005B    'a'
0x42005C    'a'
0x42005D    'n'
0x42005E    ' '
0x42005F    'a'
0x420060    'n'
0x420061    'd'
0x420062    ' '
0x420063    'J'
0x420064    'a'
0x420065    'c'
0x420066    'k'
0x420067    '\0'
0x420068    mov byte 1
0x420069    mov byte 2
0x42006A    mov byte 3
0x42006B    mov byte 4
0x42006C    adr byte 1
0x42006D    adr byte 2
0x42006E    adr byte 3
0x42006F    adr byte 4
0x420070    strb byte 1
0x420071    strb byte 2
0x420072    strb byte 3
0x420073    strb byte 4
0x420074    b byte 1
0x420075    b byte 2
0x420076    b byte 3
0x420077    b byte 4
0x420078 to 0x420087 is 16 bytes of filler. 


Stack

Offset      Description
0           x19 
8           x20
16          x21
24          x30 (readString)
32          buf [0, 7]
40          buf [8, 15]
48          buf [16, 23]
56          buf [24, 31]
64          buf [32, 39]
72          buf [40, 47]
80          x30 (getName)


// Prolog
0x400794 <readString>:	stp	x19, x20, [sp, #-80]!
0x400798 <readString+4>:	stp	x21, x30, [sp, #16]
0x40079c <readString+8>:	mov	x19, #0x0                   	// #0
0x4007a0 <readString+12>:	adrp	x21, 0x420000 <__libc_start_main@got.plt>
0x4007a4 <readString+16>:	mov	w20, w19

// First loop setup
0x4007a8 <readString+20>:	ldr	x0, [x21, #72]
0x4007ac <readString+24>:	bl	0x400620 <fgetc@plt>
0x4007b0 <readString+28>:	add	x19, x19, #0x1
0x4007b4 <readString+32>:	cmp	w0, #0xa
0x4007b8 <readString+36>:	ccmn	w0, #0x1, #0x4, ne  // ne = any
0x4007bc <readString+40>:	b.eq	0x4007d0 <readString+60>  // b.none

// First loop
0x4007c0 <readString+44>:	add	x1, sp, #0x20
0x4007c4 <readString+48>:	add	x1, x19, x1
0x4007c8 <readString+52>:	sturb	w0, [x1, #-1]
0x4007cc <readString+56>:	b	0x4007a4 <readString+16>
0x4007d0 <readString+60>:	add	x0, sp, #0x20

// buf[i] = '\0'
0x4007d4 <readString+64>:	strb	wzr, [x0, w20, sxtw]

// Second loop setup
// Second loop
0x4007d8 <readString+68>:	mov	x0, #0x1                   	// #1
0x4007dc <readString+72>:	adrp	x2, 0x420000 <__libc_start_main@got.plt>
0x4007e0 <readString+76>:	add	x2, x2, #0x57
0x4007e4 <readString+80>:	add	x1, sp, #0x20
0x4007e8 <readString+84>:	add	x1, x0, x1
0x4007ec <readString+88>:	ldurb	w1, [x1, #-1]
0x4007f0 <readString+92>:	strb	w1, [x0, x2]
0x4007f4 <readString+96>:	add	x0, x0, #0x1
0x4007f8 <readString+100>:	cmp	x0, #0x31
0x4007fc <readString+104>:	b.ne	0x4007e4 <readString+80>  // b.any

// Epilog and return
0x400800 <readString+108>:	ldp	x21, x30, [sp, #16]
0x400804 <readString+112>:	ldp	x19, x20, [sp], #80
0x400808 <readString+116>:	ret

// Prolog
0x40080c <getName>:	str	x30, [sp, #-16]!
0x400810 <getName+4>:	adrp	x0, 0x400000
0x400814 <getName+8>:	add	x0, x0, #0x948

// printf("What is your name?\n");
0x400818 <getName+12>:	bl	0x400650 <puts@plt>

// readString();
0x40081c <getName+16>:	bl	0x400794 <readString>

// Epilog and return
0x400820 <getName+20>:	ldr	x30, [sp], #16
0x400824 <getName+24>:	ret

// Prolog
0x400828 <main>:	stp	x19, x30, [sp, #-16]!
0x40082c <main+4>:	adrp	x19, 0x420000 <__libc_start_main@got.plt>
0x400830 <main+8>:	add	x19, x19, #0x58

// mprotect(...);
0x400834 <main+12>:	mov	w2, #0x7                   	// #7
0x400838 <main+16>:	mov	x1, #0x1                   	// #1
0x40083c <main+20>:	and	x0, x19, #0xfffffffffffff000
0x400840 <main+24>:	bl	0x400680 <mprotect@plt>

// getName();
0x400844 <main+28>:	bl	0x40080c <getName>

// if (strcmp(name, "Andrew Appel") != 0) skip assignment to grade
0x400848 <main+32>:	adrp	x1, 0x400000
0x40084c <main+36>:	add	x1, x1, #0x960
0x400850 <main+40>:	mov	x0, x19
0x400854 <main+44>:	bl	0x400660 <strcmp@plt>
0x400858 <main+48>:	cbnz	w0, 0x400868 <main+64>

// grade = 'B';
0x40085c <main+52>:	adrp	x0, 0x420000 <__libc_start_main@got.plt>
0x400860 <main+56>:	mov	w1, #0x42                  	// #66
0x400864 <main+60>:	strb	w1, [x0, #68]
0x400868 <main+64>:	adrp	x0, 0x420000 <__libc_start_main@got.plt>
0x40086c <main+68>:	ldrb	w1, [x0, #68]

// printf("%c is your grade.\n", grade);
0x400870 <main+72>:	adrp	x0, 0x400000
0x400874 <main+76>:	add	x0, x0, #0x970
0x400878 <main+80>:	bl	0x400670 <printf@plt>

// printf("Thank you, %s.\n", name);
0x40087c <main+84>:	adrp	x1, 0x420000 <__libc_start_main@got.plt>
0x400880 <main+88>:	add	x1, x1, #0x58
0x400884 <main+92>:	adrp	x0, 0x400000
0x400888 <main+96>:	add	x0, x0, #0x988
0x40088c <main+100>:	bl	0x400670 <printf@plt>

// Epilog and return 0
0x400890 <main+104>:	mov	w0, #0x0                   	// #0
0x400894 <main+108>:	ldp	x19, x30, [sp], #16
0x400898 <main+112>:	ret

0x40089c:	.inst	0x00000000 ; undefined
0x4008a0 <__libc_csu_init>:	stp	x29, x30, [sp, #-64]!
0x4008a4 <__libc_csu_init+4>:	mov	x29, sp
0x4008a8 <__libc_csu_init+8>:	stp	x19, x20, [sp, #16]
0x4008ac <__libc_csu_init+12>:	adrp	x20, 0x41f000